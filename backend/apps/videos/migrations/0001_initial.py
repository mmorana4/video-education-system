# Generated by Django 5.0.1 on 2025-10-01 20:44

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Segmento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título')),
                ('descripcion', models.TextField(help_text='Descripción del contenido del segmento', verbose_name='Descripción')),
                ('timestamp_inicio_seg', models.IntegerField(help_text='Segundo de inicio del segmento', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Timestamp Inicio (segundos)')),
                ('timestamp_fin_seg', models.IntegerField(help_text='Segundo de fin del segmento', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Timestamp Fin (segundos)')),
                ('duracion_seg', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Duración (segundos)')),
                ('ruta_archivo_segmento', models.FileField(blank=True, null=True, upload_to='segmentos/%Y/%m/%d/', verbose_name='Archivo del Segmento')),
                ('orden', models.IntegerField(help_text='Orden de importancia del segmento', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Orden')),
                ('relevancia_score', models.FloatField(help_text='Puntuación de relevancia (0-10)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MinValueValidator(10)], verbose_name='Score de Relevancia')),
                ('tipo_contenido', models.CharField(choices=[('introduccion', 'Introducción'), ('concepto_clave', 'Concepto Clave'), ('ejemplo', 'Ejemplo'), ('demostracion', 'Demostración'), ('conclusion', 'Conclusión'), ('pregunta_respuesta', 'Pregunta y Respuesta'), ('ejercicio', 'Ejercicio'), ('otro', 'Otro')], default='otro', max_length=30, verbose_name='Tipo de Contenido')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('miniatura_url', models.ImageField(blank=True, null=True, upload_to='miniaturas_segmentos/%Y/%m/%d/', verbose_name='Miniatura')),
            ],
            options={
                'verbose_name': 'Segmento',
                'verbose_name_plural': 'Segmentos',
                'db_table': 'segmentos',
                'ordering': ['video', 'orden'],
            },
        ),
        migrations.CreateModel(
            name='ConfiguracionSistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parametro', models.CharField(max_length=100, unique=True, verbose_name='Parámetro')),
                ('valor', models.TextField(verbose_name='Valor')),
                ('descripcion', models.TextField(help_text='Descripción del parámetro de configuración', verbose_name='Descripción')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('modificado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='configuraciones_modificadas', to=settings.AUTH_USER_MODEL, verbose_name='Modificado Por')),
            ],
            options={
                'verbose_name': 'Configuración del Sistema',
                'verbose_name_plural': 'Configuraciones del Sistema',
                'db_table': 'configuracion_sistema',
                'ordering': ['parametro'],
            },
        ),
        migrations.CreateModel(
            name='EtiquetaSegmento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etiqueta', models.CharField(max_length=50, verbose_name='Etiqueta')),
                ('confianza', models.FloatField(help_text='Nivel de confianza de la etiqueta (0-1)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MinValueValidator(1)], verbose_name='Confianza')),
                ('fecha_asignacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Asignación')),
                ('segmento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etiquetas', to='videos.segmento', verbose_name='Segmento')),
            ],
            options={
                'verbose_name': 'Etiqueta de Segmento',
                'verbose_name_plural': 'Etiquetas de Segmentos',
                'db_table': 'etiquetas_segmento',
                'ordering': ['segmento', '-confianza'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título')),
                ('url_original', models.URLField(blank=True, max_length=500, null=True, verbose_name='URL Original')),
                ('fuente', models.CharField(choices=[('youtube', 'YouTube'), ('vimeo', 'Vimeo'), ('local', 'Archivo Local'), ('otro', 'Otro')], max_length=20, verbose_name='Fuente')),
                ('ruta_video_completo', models.FileField(blank=True, null=True, upload_to='videos/%Y/%m/%d/', verbose_name='Video Completo')),
                ('duracion_segundos', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Duración (segundos)')),
                ('formato', models.CharField(blank=True, max_length=10, null=True, verbose_name='Formato')),
                ('tamano_mb', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Tamaño (MB)')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('descargando', 'Descargando'), ('procesando', 'Procesando'), ('transcribiendo', 'Transcribiendo'), ('analizando', 'Analizando IA'), ('segmentando', 'Segmentando'), ('completado', 'Completado'), ('error', 'Error')], default='pendiente', max_length=20, verbose_name='Estado')),
                ('fecha_subida', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Subida')),
                ('fecha_procesamiento', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Procesamiento')),
                ('miniatura_url', models.ImageField(blank=True, null=True, upload_to='miniaturas/%Y/%m/%d/', verbose_name='Miniatura')),
                ('metadata_json', models.JSONField(blank=True, help_text='Información adicional en formato JSON', null=True, verbose_name='Metadata')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Video',
                'verbose_name_plural': 'Videos',
                'db_table': 'videos',
                'ordering': ['-fecha_subida'],
            },
        ),
        migrations.CreateModel(
            name='Transcripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenido_completo', models.TextField(help_text='Transcripción completa del audio', verbose_name='Contenido Completo')),
                ('idioma_detectado', models.CharField(default='es', max_length=10, verbose_name='Idioma Detectado')),
                ('precision_estimada', models.FloatField(blank=True, help_text='Porcentaje de precisión de la transcripción', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MinValueValidator(100)], verbose_name='Precisión Estimada')),
                ('transcripcion_con_timestamps', models.JSONField(help_text='Transcripción segmentada con marcas de tiempo', verbose_name='Transcripción con Timestamps')),
                ('fecha_generacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Generación')),
                ('modelo_utilizado', models.CharField(help_text='Nombre del modelo de transcripción usado', max_length=100, verbose_name='Modelo Utilizado')),
                ('video', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='transcripcion', to='videos.video', verbose_name='Video')),
            ],
            options={
                'verbose_name': 'Transcripción',
                'verbose_name_plural': 'Transcripciones',
                'db_table': 'transcripciones',
                'ordering': ['-fecha_generacion'],
            },
        ),
        migrations.AddField(
            model_name='segmento',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segmentos', to='videos.video', verbose_name='Video'),
        ),
        migrations.CreateModel(
            name='ResumenEjecutivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resumen_completo', models.TextField(help_text='Resumen ejecutivo del contenido del video', verbose_name='Resumen Completo')),
                ('temas_principales', models.TextField(help_text='Lista de temas principales identificados', verbose_name='Temas Principales')),
                ('conclusiones_clave', models.TextField(help_text='Conclusiones más importantes', verbose_name='Conclusiones Clave')),
                ('puntos_importantes', models.TextField(help_text='Puntos destacados del contenido', verbose_name='Puntos Importantes')),
                ('cantidad_palabras', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cantidad de Palabras')),
                ('fecha_generacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Generación')),
                ('modelo_ia_utilizado', models.CharField(help_text='Nombre del modelo de IA usado para el resumen', max_length=100, verbose_name='Modelo IA Utilizado')),
                ('video', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resumen_ejecutivo', to='videos.video', verbose_name='Video')),
            ],
            options={
                'verbose_name': 'Resumen Ejecutivo',
                'verbose_name_plural': 'Resúmenes Ejecutivos',
                'db_table': 'resumenes_ejecutivos',
                'ordering': ['-fecha_generacion'],
            },
        ),
        migrations.CreateModel(
            name='LogProcesamiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etapa', models.CharField(help_text='Nombre de la etapa del procesamiento', max_length=50, verbose_name='Etapa')),
                ('estado', models.CharField(choices=[('iniciado', 'Iniciado'), ('en_progreso', 'En Progreso'), ('completado', 'Completado'), ('error', 'Error'), ('cancelado', 'Cancelado')], max_length=20, verbose_name='Estado')),
                ('mensaje', models.TextField(help_text='Mensaje descriptivo del log', verbose_name='Mensaje')),
                ('error_detalle', models.TextField(blank=True, help_text='Información detallada del error si existe', null=True, verbose_name='Detalle del Error')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('duracion_ms', models.IntegerField(blank=True, help_text='Duración de la etapa en milisegundos', null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Duración (ms)')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='videos.video', verbose_name='Video')),
            ],
            options={
                'verbose_name': 'Log de Procesamiento',
                'verbose_name_plural': 'Logs de Procesamiento',
                'db_table': 'logs_procesamiento',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='EtiquetaVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etiqueta', models.CharField(max_length=50, verbose_name='Etiqueta')),
                ('categoria', models.CharField(blank=True, max_length=50, null=True, verbose_name='Categoría')),
                ('fecha_asignacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Asignación')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etiquetas', to='videos.video', verbose_name='Video')),
            ],
            options={
                'verbose_name': 'Etiqueta de Video',
                'verbose_name_plural': 'Etiquetas de Videos',
                'db_table': 'etiquetas_video',
                'ordering': ['video', 'etiqueta'],
            },
        ),
        migrations.AddIndex(
            model_name='video',
            index=models.Index(fields=['usuario', 'estado'], name='videos_usuario_e33b59_idx'),
        ),
        migrations.AddIndex(
            model_name='video',
            index=models.Index(fields=['fecha_subida'], name='videos_fecha_s_28e9f5_idx'),
        ),
        migrations.AddIndex(
            model_name='segmento',
            index=models.Index(fields=['video', 'orden'], name='segmentos_video_i_0c8b21_idx'),
        ),
        migrations.AddIndex(
            model_name='segmento',
            index=models.Index(fields=['relevancia_score'], name='segmentos_relevan_ebb589_idx'),
        ),
        migrations.AddIndex(
            model_name='logprocesamiento',
            index=models.Index(fields=['video', 'timestamp'], name='logs_proces_video_i_cfe415_idx'),
        ),
        migrations.AddIndex(
            model_name='logprocesamiento',
            index=models.Index(fields=['estado'], name='logs_proces_estado_24a3e2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='etiquetavideo',
            unique_together={('video', 'etiqueta')},
        ),
    ]
